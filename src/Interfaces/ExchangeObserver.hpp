//----------------------------------------------------------------------------------------------------------------------
// File: ExchangeObserver.hpp
// Description: 
//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include "Components/Security/SecurityState.hpp"
//----------------------------------------------------------------------------------------------------------------------
#include <memory>
//----------------------------------------------------------------------------------------------------------------------

namespace Security { class CipherPackage; }

//----------------------------------------------------------------------------------------------------------------------

enum class ExchangeStatus : std::uint8_t { Failed, Success };

//----------------------------------------------------------------------------------------------------------------------

class IExchangeObserver
{
public:
    virtual ~IExchangeObserver() = default;

    virtual void OnExchangeClose(ExchangeStatus status) = 0;
    virtual void OnFulfilledStrategy(std::unique_ptr<Security::CipherPackage>&& upCipherPackage) = 0;
};

//----------------------------------------------------------------------------------------------------------------------
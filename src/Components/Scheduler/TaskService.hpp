//----------------------------------------------------------------------------------------------------------------------
// File: TaskService.hpp
// Description: 
//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <deque>
#include <functional>
#include <memory>
//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
namespace Scheduler {
//----------------------------------------------------------------------------------------------------------------------

using BasicTask = std::function<void()>;

class Delegate;
class Registrar;
class TaskService;

//----------------------------------------------------------------------------------------------------------------------
} // Scheduler namespace
//----------------------------------------------------------------------------------------------------------------------

class Scheduler::TaskService
{
public:
    TaskService(std::shared_ptr<Registrar> const& spRegistrar);
    ~TaskService();

    void Schedule(BasicTask const& callback);

private:
    std::shared_ptr<Delegate> m_spDelegate;
    mutable std::mutex m_mutex;
    std::deque<BasicTask> m_tasks;
};

//----------------------------------------------------------------------------------------------------------------------

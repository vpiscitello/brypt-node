//----------------------------------------------------------------------------------------------------------------------
// File: LoRaEndpoint.cpp
// Description:
//----------------------------------------------------------------------------------------------------------------------
#include "Endpoint.hpp"
//----------------------------------------------------------------------------------------------------------------------
#include "EndpointDefinitions.hpp"
#include "BryptMessage/ApplicationMessage.hpp"
#include "Components/Network/Address.hpp"
#include "Components/Network/EndpointDefinitions.hpp"
//----------------------------------------------------------------------------------------------------------------------

Network::LoRa::Endpoint::Endpoint(Operation operation)
    : IEndpoint(operation, Protocol::LoRa)
{
}

//----------------------------------------------------------------------------------------------------------------------

Network::LoRa::Endpoint::~Endpoint()
{
}

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Description:
//----------------------------------------------------------------------------------------------------------------------
Network::Protocol Network::LoRa::Endpoint::GetProtocol() const
{
    return ProtocolType;
}

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Description:
//----------------------------------------------------------------------------------------------------------------------
std::string Network::LoRa::Endpoint::GetScheme() const
{
    return Scheme.data();
}

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Description:
// Returns:
//----------------------------------------------------------------------------------------------------------------------
Network::BindingAddress Network::LoRa::Endpoint::GetBinding() const
{
    return {};
}

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Description:
//----------------------------------------------------------------------------------------------------------------------
void Network::LoRa::Endpoint::Startup()
{
}

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Description:
//----------------------------------------------------------------------------------------------------------------------
bool Network::LoRa::Endpoint::Shutdown()
{
    return true;
}

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Description:
//----------------------------------------------------------------------------------------------------------------------

bool Network::LoRa::Endpoint::IsActive() const
{
    return false;
}

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Description:
//----------------------------------------------------------------------------------------------------------------------
void Network::LoRa::Endpoint::ScheduleBind([[maybe_unused]] BindingAddress const& binding)
{
}

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Description:
//----------------------------------------------------------------------------------------------------------------------
void Network::LoRa::Endpoint::ScheduleConnect(RemoteAddress const& address)
{
    RemoteAddress remote = address;
    ScheduleConnect(std::move(remote));
}

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Description:
//----------------------------------------------------------------------------------------------------------------------
void Network::LoRa::Endpoint::ScheduleConnect([[maybe_unused]] RemoteAddress&& address)
{
}

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Description:
//----------------------------------------------------------------------------------------------------------------------
void Network::LoRa::Endpoint::ScheduleConnect(
    [[maybe_unused]] RemoteAddress&& address,
    [[maybe_unused]] Node::SharedIdentifier const& spIdentifier)
{
}

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Description:
//----------------------------------------------------------------------------------------------------------------------
bool Network::LoRa::Endpoint::ScheduleSend(
    [[maybe_unused]] Node::Identifier const& identifier,
    [[maybe_unused]] std::string_view message)
{
    return false;
}

//----------------------------------------------------------------------------------------------------------------------

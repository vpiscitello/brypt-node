//----------------------------------------------------------------------------------------------------------------------
// File: Algorithms.hpp
// Description: 
//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <cstdint>
#include <string>
#include <unordered_set>
//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
namespace Security {
//----------------------------------------------------------------------------------------------------------------------

static std::unordered_set<std::string> const SupportedKeyAgreementNames {
    // TODO: What Do With These Diffie-Hellman Algorithms 
    "x25519",
    "x448",
    // Finite Field Diffie-Hellman Algorithms
    "ffdhe-2048",
    "ffdhe-3072",
    "ffdhe-4096",
    "ffdhe-6144",
    "ffdhe-8192",
    // Elliptic Curve Diffie-Hellman Algorithms
    "ecdh-b-163",
    "ecdh-b-233",
    "ecdh-b-283",
    "ecdh-b-409",
    "ecdh-b-571",
    "ecdh-k-163",
    "ecdh-k-233",
    "ecdh-k-283",
    "ecdh-k-409",
    "ecdh-k-571",
    "ecdh-p-192",
    "ecdh-p-224",
    "ecdh-p-256",
    "ecdh-p-384",
    "ecdh-p-521",
    "ecdh-secp-128-r1",
    "ecdh-secp-128-r2",
    "ecdh-secp-160-k1",
    "ecdh-secp-160-r1",
    "ecdh-secp-160-r2",
    "ecdh-secp-192-k1",
    "ecdh-secp-224-k1",
    "ecdh-secp-224-r1",
    "ecdh-secp-256-k1",
    "ecdh-secp-384-r1",
    "ecdh-secp-521-r1",
    "ecdh-prime-192-v1",
    "ecdh-prime-192-v2",
    "ecdh-prime-192-v3",
    "ecdh-prime-239-v1",
    "ecdh-prime-239-v2",
    "ecdh-prime-239-v3",
    "ecdh-prime-256-v1",
    "ecdh-sect-131-r1",
    "ecdh-sect-131-r2",
    "ecdh-sect-163-k1",
    "ecdh-sect-163-r1",
    "ecdh-sect-163-r2",
    "ecdh-sect-193-r1",
    "ecdh-sect-193-r2",
    "ecdh-sect-233-k1",
    "ecdh-sect-233-r1",
    "ecdh-sect-239-k1",
    "ecdh-sect-283-k1",
    "ecdh-sect-283-r1",
    "ecdh-sect-409-k1",
    "ecdh-sect-409-r1",
    "ecdh-sect-571-k1",
    "ecdh-sect-571-r1",
    "ecdh-c2-pnb-163-v1",
    "ecdh-c2-pnb-163-v2",
    "ecdh-c2-pnb-163-v3",
    "ecdh-c2-pnb-176-v1",
    "ecdh-c2-tnb-191-v1",
    "ecdh-c2-tnb-191-v2",
    "ecdh-c2-tnb-191-v3",
    "ecdh-c2-pnb-208-w1",
    "ecdh-c2-tnb-239-v1",
    "ecdh-c2-tnb-239-v2",
    "ecdh-c2-tnb-239-v3",
    "ecdh-c2-pnb-272-w1",
    "ecdh-c2-pnb-304-w1",
    "ecdh-c2-tnb-359-v1",
    "ecdh-c2-pnb-368-w1",
    "ecdh-c2-tnb-431-r1",
    "ecdh-oakley-ec2n-3",
    "ecdh-oakley-ec2n-4",
    "ecdh-brainpool-p-160-r1",
    "ecdh-brainpool-p-160-t1",
    "ecdh-brainpool-p-192-r1",
    "ecdh-brainpool-p-192-t1",
    "ecdh-brainpool-p-224-r1",
    "ecdh-brainpool-p-224-t1",
    "ecdh-brainpool-p-256-r1",
    "ecdh-brainpool-p-256-t1",
    "ecdh-brainpool-p-320-r1",
    "ecdh-brainpool-p-320-t1",
    "ecdh-brainpool-p-384-r1",
    "ecdh-brainpool-p-384-t1",
    "ecdh-brainpool-p-512-r1",
    "ecdh-brainpool-p-512-t1",
    // Post Quantum Algorithms 
#ifndef WIN32
    "kem-bike-l1",
    "kem-bike-l3",
    "kem-bike-l5",
#endif // !WIN32
    "kem-classic-mceliece-348864",
    "kem-classic-mceliece-348864f",
    "kem-classic-mceliece-460896",
    "kem-classic-mceliece-460896f",
    "kem-classic-mceliece-6688128",
    "kem-classic-mceliece-6688128f",
    "kem-classic-mceliece-6960119",
    "kem-classic-mceliece-6960119f", 
    "kem-classic-mceliece-8192128",
    "kem-classic-mceliece-8192128f",
    "kem-hqc-128",
    "kem-hqc-192",
    "kem-hqc-256",
    "kem-kyber512",
    "kem-kyber768",
    "kem-kyber1024",
    "kem-sntruprime-sntrup761",
    "kem-frodokem-640-aes",
    "kem-frodokem-640-shake",
    "kem-frodokem-976-aes",
    "kem-frodokem-976-shake",
    "kem-frodokem-1344-aes",
    "kem-frodokem-1344-shake"
};

//----------------------------------------------------------------------------------------------------------------------

static std::unordered_set<std::string> const SupportedCipherNames {
    "aes-128-cbc",
    "aes-128-ccm",
    "aes-128-cfb",
    "aes-128-cfb1",
    "aes-128-cfb8",
    "aes-128-ctr",
    "aes-128-ecb",
    "aes-128-gcm",
    "aes-128-ofb",
    "aes-192-cbc",
    "aes-192-ccm",
    "aes-192-cfb",
    "aes-192-cfb1",
    "aes-192-cfb8",
    "aes-192-ctr",
    "aes-192-ecb",
    "aes-192-gcm",
    "aes-192-ocb",
    "aes-192-ofb",
    "aes-256-cbc",
    "aes-256-ccm",
    "aes-256-cfb",
    "aes-256-cfb1",
    "aes-256-cfb8",
    "aes-256-ctr",
    "aes-256-ecb",
    "aes-256-gcm",
    "aes-256-ocb",
    "aes-256-ofb",
    "aria-128-cbc",
    "aria-128-ccm",
    "aria-128-cfb",
    "aria-128-cfb1",
    "aria-128-cfb8",
    "aria-128-ctr",
    "aria-128-ecb",
    "aria-128-gcm",
    "aria-128-ofb",
    "aria-192-cbc",
    "aria-192-ccm",
    "aria-192-cfb",
    "aria-192-cfb1",
    "aria-192-cfb8",
    "aria-192-ctr",
    "aria-192-ecb",
    "aria-192-gcm",
    "aria-192-ofb",
    "aria-256-cbc",
    "aria-256-ccm",
    "aria-256-cfb",
    "aria-256-cfb1",
    "aria-256-cfb8",
    "aria-256-ctr",
    "aria-256-ecb",
    "aria-256-gcm",
    "aria-256-ofb",
    "camellia-128-cbc",
    "camellia-128-cfb",
    "camellia-128-cfb1",
    "camellia-128-cfb8",
    "camellia-128-ctr",
    "camellia-128-ecb",
    "camellia-128-ofb",
    "camellia-192-cbc",
    "camellia-192-cfb",
    "camellia-192-cfb1",
    "camellia-192-cfb8",
    "camellia-192-ctr",
    "camellia-192-ecb",
    "camellia-192-ofb",
    "camellia-256-cbc",
    "camellia-256-cfb",
    "camellia-256-cfb1",
    "camellia-256-cfb8",
    "camellia-256-ctr",
    "camellia-256-ecb",
    "camellia-256-ofb",
    "chacha20",
    "chacha20-poly1305",
    "des-ede",
    "des-ede-cbc",
    "des-ede-cfb",
    "des-ede-ecb",
    "des-ede-ofb",
    "des-ede3",
    "des-ede3-cbc",
    "des-ede3-cfb",
    "des-ede3-cfb1",
    "des-ede3-cfb8",
    "des-ede3-ecb",
    "des-ede3-ofb",
    "sm4-ecb",
    "sm4-cbc",
    "sm4-cfb",
    "sm4-ofb",
    "sm4-ctr"
};

//----------------------------------------------------------------------------------------------------------------------

static std::unordered_set<std::string> const SupportedHashFunctionNames {
    "blake2b512",
    "blake2s256",
    "md5",
    "md5-sha1",
    "ripemd160",
    "sha1",
    "sha224",
    "sha256",
    "sha384",
    "sha512",
    "sha512-224",
    "sha512-256",
    "sha3-224",
    "sha3-256",
    "sha3-384",
    "sha3-512",
    "sm3"
};

//----------------------------------------------------------------------------------------------------------------------
} // Security namespace
//----------------------------------------------------------------------------------------------------------------------

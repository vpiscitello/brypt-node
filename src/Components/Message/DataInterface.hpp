//----------------------------------------------------------------------------------------------------------------------
// File: DataInterface.hpp
// Description:
//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include "MessageTypes.hpp"
//----------------------------------------------------------------------------------------------------------------------
#include <cstdint>
#include <span>
#include <string_view>
//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
namespace Message::DataInterface  {
//----------------------------------------------------------------------------------------------------------------------

class Viewable;
class Packable;

//----------------------------------------------------------------------------------------------------------------------
} // Message::DataInterface namespace
//----------------------------------------------------------------------------------------------------------------------

class Message::DataInterface::Viewable
{
public:
    virtual ~Viewable() = default;
    [[nodiscard]] virtual std::span<std::uint8_t const> GetReadableView() const = 0;
    [[nodiscard]] virtual std::string_view GetStringView() const = 0;
    [[nodiscard]] virtual bool IsEmpty() const = 0;
};

//----------------------------------------------------------------------------------------------------------------------

class Message::DataInterface::Packable
{
public:
    virtual ~Packable() = default;
	[[nodiscard]] virtual std::size_t GetPackSize() const = 0;
    virtual void Inject(Buffer& buffer) const = 0;
    [[nodiscard]] virtual bool Unpack(
        std::span<std::uint8_t const>::iterator& begin,
        std::span<std::uint8_t const>::iterator const& end) = 0;
};

//----------------------------------------------------------------------------------------------------------------------
